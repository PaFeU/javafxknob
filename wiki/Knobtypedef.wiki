#summary One-sentence summary of this page.

= Defining a new knob type =

To describe a new type of knob for the control, you just need to create a new class that inherits from basicKnob.

In this class you can set the path to the graphical resources of the knob (probably an Adobe Illustrator file converted to .FXZ with the JavaFX Production Suite) and set the radius for the gauge lines in this knob (distance from the center of the component to the start or end of the lines).

The knob has two kind of gauge lines, the short and long. Then, when you define a knob instance, you can set the frequency for the long lines without additional work.

The graphical resource include two elements or group of elements (grouped as layerts). One named "knob", which contains the general appearance of the knob and a second layer named "gauge" that contains the moving part of the knob (this one includes a transparent line connecting the center of the knob to the border of the knob, this is done to rotate the "gauge" from the tip of this line).

The Netbeans project includes three Adobe Illustrator examples in the root directory.

{{{
import javafx.scene.Node;
import javafx.fxd.UiStub;

public class orangeKnob extends basicKnob {

    /** JavaFX image format containing the knob
     * Adobe Illustrator converted to fxz format */
    override public var url = "{__DIR__}knob3.fxz";
    /** knob width */
    override public var width = 136;
    /** knob height */
    override public var height = 136;
    /** internal radius for gauge long lines */
    override public var internalRadDial = 57;
    /** external radius for gauge long lines */
    override public var externalRadDial = 70;
    /** internal radius for gauge short lines */
    override public var internalShortRadDial = 57;
    /** external radius for gauge short lines */
    override public var externalShortRadDial = 62;

}
}}}